{
  "hash": "20558c6d4a18c1a6352c66ee6a499390",
  "result": {
    "markdown": "---\ntitle: \"Transform dataset\"\n---\n\n\n# Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load packages\nlibrary(readr)        # reading/ writing datasets\nlibrary(stringr)      # match words  \nlibrary(knitr)        # for `kable()` function\nlibrary(dplyr)        # basic data manipulation\nlibrary(tidytext)     # text manipulation\nlibrary(qtalrkit)     # data dictionary creation\nlibrary(ggplot2)      # plotting\nlibrary(fs)           # file system operations\nlibrary(tibble)       # print data frames\nlibrary(kableExtra)   # creating formatted tables\n```\n:::\n\n\n# Read files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nST_df <-\n  read_csv(\"data/derived/CAR_ST_curated.csv\")\n\nTT_df <-\n  read_csv(\"data/derived/CAR_TT_curated.csv\")\n```\n:::\n\n\n# Transform\n\n## Counting hedges\n\nFor English hedges' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhedg_may_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Mm]ay\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nhedg_typ_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Tt]ypically\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nhedg_rel_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Rr]elatively\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nhedg_sli_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ss]lightly\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nhedg_pro_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Pp]robably\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nhedg_sug_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ss]uggest.*\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nhedges_num_EN = hedg_may_num + hedg_typ_num + hedg_rel_num + hedg_sli_num + hedg_pro_num + hedg_sug_num\n```\n:::\n\n\nFor Mandarin hedges' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhedg_yi_num <- \n  TT_df |>\n filter(str_detect(lines, \".*一定程度.*\")) |>\n  summarise(num_sentences = n())\n\nhedg_ke_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\可能.*\")) |>\n  summarise(num_sentences = n())\n\nhedg_ji_num <- \n  TT_df |>\n filter(str_detect(lines, \".*几乎.*\")) |>\n  summarise(num_sentences = n())\n\nhedg_ky_num <- \n  TT_df |>\n filter(str_detect(lines, \".*可以说是.*\")) |>\n  summarise(num_sentences = n())\n\nhedg_l_num <- \n  TT_df |>\n filter(str_detect(lines, \".*略有.*\")) |>\n  summarise(num_sentences = n())\n\nhedges_num_CN = hedg_yi_num + hedg_ke_num + hedg_ji_num + hedg_ky_num + hedg_l_num\n```\n:::\n\n\n## Counting boosters\n\nFor English boosters' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbo_es_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ee]specially\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nbo_su_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ss]ubstantially\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nbo_si_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ss]ignificantly\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nbo_dr_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Dd]ramatically\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nbo_pr_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Pp]recisely\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nbo_me_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Mm]erely\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nbo_pa_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Pp]articularly\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nbo_in_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ii]n\\\\s*particular\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nbo_ve_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Vv]ery\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nbo_wi_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ww]ithout\\\\s*any\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nbo_de_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Dd]emonstrate.*\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nbo_ind_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ii]ndicate.*\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nbo_ver_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Vv]erif.*\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nboosters_num_EN = bo_es_num + bo_su_num + bo_si_num +bo_dr_num + bo_pr_num + bo_me_num + bo_pa_num + bo_in_num + bo_ve_num + bo_wi_num + bo_de_num + bo_ind_num + bo_ver_num\n```\n:::\n\n\nFor Mandarin boosters' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbo_bh_num <- \n  TT_df |>\n filter(str_detect(lines, \".*不会.*\")) |>\n  summarise(num_sentences = n())\n\nbo_wf_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\无法.*\")) |>\n  summarise(num_sentences = n())\n\nbo_bz_num <- \n  TT_df |>\n filter(str_detect(lines, \".*不再.*\")) |>\n  summarise(num_sentences = n())\n\nbo_wx_num <- \n  TT_df |>\n filter(str_detect(lines, \".*无需.*\")) |>\n  summarise(num_sentences = n())\n\nbo_bd_num <- \n  TT_df |>\n filter(str_detect(lines, \".*不对.*\")) |>\n  summarise(num_sentences = n())\n\nbo_jb_num <- \n  TT_df |>\n filter(str_detect(lines, \".*均不.*\")) |>\n  summarise(num_sentences = n())\n\nbo_gs_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\更是.*\")) |>\n  summarise(num_sentences = n())\n\nbo_bx_num <- \n  TT_df |>\n filter(str_detect(lines, \".*必需.*\")) |>\n  summarise(num_sentences = n())\n\nbo_jn_num <- \n  TT_df |>\n filter(str_detect(lines, \".*就能.*\")) |>\n  summarise(num_sentences = n())\n\nbo_rh_num <- \n  TT_df |>\n filter(str_detect(lines, \".*任何.*\")) |>\n  summarise(num_sentences = n())\n\nbo_dd_num <- \n  TT_df |>\n filter(str_detect(lines, \".*大大.*\")) |>\n  summarise(num_sentences = n())\n\nbo_yq_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\尤其.*\")) |>\n  summarise(num_sentences = n())\n\nbo_zy_num <- \n  TT_df |>\n filter(str_detect(lines, \".*只有.*\")) |>\n  summarise(num_sentences = n())\n\nbo_j_num <- \n  TT_df |>\n filter(str_detect(lines, \".*仅.*\")) |>\n  summarise(num_sentences = n())\n\nbo_z_num <- \n  TT_df |>\n filter(str_detect(lines, \".*最.*\")) |>\n  summarise(num_sentences = n())\n\nbo_ji_num <- \n  TT_df |>\n filter(str_detect(lines, \".*极.*\")) |>\n  summarise(num_sentences = n())\n\nbo_mx_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\明显.*\")) |>\n  summarise(num_sentences = n())\n\nbo_xz_num <- \n  TT_df |>\n filter(str_detect(lines, \".*显著.*\")) |>\n  summarise(num_sentences = n())\n\nbo_zs_num <- \n  TT_df |>\n filter(str_detect(lines, \".*证实.*\")) |>\n  summarise(num_sentences = n())\n\nbo_js_num <- \n  TT_df |>\n filter(str_detect(lines, \".*揭示.*\")) |>\n  summarise(num_sentences = n())\n\nbo_zm_num <- \n  TT_df |>\n filter(str_detect(lines, \".*证明.*\")) |>\n  summarise(num_sentences = n())\n\nbo_yz_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\验证.*\")) |>\n  summarise(num_sentences = n())\n\nbo_bcz_num <- \n  TT_df |>\n filter(str_detect(lines, \".*不存在.*\")) |>\n  summarise(num_sentences = n())\n\nboosters_num_CN = bo_bh_num + bo_wf_num + bo_bz_num + bo_wx_num + bo_bd_num + bo_jb_num + bo_gs_num + bo_bx_num + bo_jn_num + bo_rh_num + bo_dd_num + bo_yq_num + bo_zy_num + bo_j_num + bo_z_num + bo_ji_num + bo_mx_num + bo_zs_num + bo_js_num + bo_zm_num + bo_yz_num + bo_bcz_num\n```\n:::\n\n\n## Counting attitude markers\n\nFor English attitude markers' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\natt_dif_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Dd]ifficult\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\natt_sig_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ss]ignificant\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nattitude_num_EN = att_dif_num + att_sig_num\n```\n:::\n\n\nFor Mandarin attitude markers' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\natt_yw_num <- \n  TT_df |>\n filter(str_detect(lines, \".*有望.*\")) |>\n  summarise(num_sentences = n())\n\natt_n_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\难.*\")) |>\n  summarise(num_sentences = n())\n\nattitude_num_CN = att_yw_num + att_n_num\n```\n:::\n\n\n## Counting engagement markers\n\nFor English engagement markers' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\neng_gi_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Gg]iven\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nengagement_num_EN = eng_gi_num\n```\n:::\n\n\nFor Mandarin engagement markers' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\neng_sm_num <- \n  TT_df |>\n filter(str_detect(lines, \".*说明.*\")) |>\n  summarise(num_sentences = n())\n\nengagement_num_CN = eng_sm_num\n```\n:::\n\n\n## Counting self-mentions\n\nFor English self-mentions' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsel_we_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ww]e\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nsel_ou_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Oo]ur\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nself_num_EN = sel_we_num + sel_ou_num\n```\n:::\n\n\nFor Mandarin self-mentions' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsel_wm_num <- \n  TT_df |>\n filter(str_detect(lines, \".*我们.*\")) |>\n  summarise(num_sentences = n())\n\nself_num_CN = sel_wm_num\n```\n:::\n\n\n## Counting transitions\n\nFor English transitions' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntr_ho_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Hh]owever\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ntr_wh_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ww]hile\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ntr_bu_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Bb]ut\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ntr_thu_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Tt]hus\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ntr_in_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ii]n\\\\s*contrast(?:\\\\sto)?\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ntr_ad_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Aa]dditionally\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ntr_mo_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Mm]oreover\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ntr_al_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Aa]lso\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ntr_st_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ss]till\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ntr_the_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Tt]herefore\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ntr_as_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Aa]s\\\\s*such\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ntr_an_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Aa]nd\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ntransitions_num_EN = tr_ho_num + tr_wh_num + tr_bu_num + tr_thu_num + tr_in_num + tr_ad_num + tr_mo_num + tr_al_num + tr_st_num + tr_the_num + tr_as_num + tr_an_num \n```\n:::\n\n\nFor Mandarin transitions' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntr_d_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\但.*\")) |>\n  summarise(num_sentences = n())\n\ntr_re_num <- \n  TT_df |>\n filter(str_detect(lines, \".*然而.*\")) |>\n  summarise(num_sentences = n())\n\ntr_e_num <- \n  TT_df |>\n filter(str_detect(lines, \".*而.*\")) |>\n  summarise(num_sentences = n())\n\ntr_sr_num <- \n  TT_df |>\n filter(str_detect(lines, \".*虽然.*\")) |>\n  summarise(num_sentences = n())\n\ntr_ds_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\但是.*\")) |>\n  summarise(num_sentences = n())\n\ntr_q_num <- \n  TT_df |>\n filter(str_detect(lines, \".*且.*\")) |>\n  summarise(num_sentences = n())\n\ntr_ce_num <- \n  TT_df |>\n filter(str_detect(lines, \".*从而.*\")) |>\n  summarise(num_sentences = n())\n\ntr_rc_num <- \n  TT_df |>\n filter(str_detect(lines, \".*如此.*\")) |>\n  summarise(num_sentences = n())\n\ntr_yy_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\由于.*\")) |>\n  summarise(num_sentences = n())\n\ntr_zy_num <- \n  TT_df |>\n filter(str_detect(lines, \".*这样一来.*\")) |>\n  summarise(num_sentences = n())\n\ntr_yw_num <- \n  TT_df |>\n filter(str_detect(lines, \".*因为.*\")) |>\n  summarise(num_sentences = n())\n\ntr_sy_num <- \n  TT_df |>\n filter(str_detect(lines, \".*所以.*\")) |>\n  summarise(num_sentences = n())\n\ntr_yc_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\因此.*\")) |>\n  summarise(num_sentences = n())\n\ntr_sh_num <- \n  TT_df |>\n filter(str_detect(lines, \".*随后.*\")) |>\n  summarise(num_sentences = n())\n\ntr_rg_num <- \n  TT_df |>\n filter(str_detect(lines, \".*如果.*\")) |>\n  summarise(num_sentences = n())\n\ntr_r_num <- \n  TT_df |>\n filter(str_detect(lines, \".*若.*\")) |>\n  summarise(num_sentences = n())\n\ntr_h_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\或.*\")) |>\n  summarise(num_sentences = n())\n\ntr_ts_num <- \n  TT_df |>\n filter(str_detect(lines, \".*同时.*\")) |>\n  summarise(num_sentences = n())\n\ntr_yj_num <- \n  TT_df |>\n filter(str_detect(lines, \".*以及.*\")) |>\n  summarise(num_sentences = n())\n\ntr_ren_num <- \n  TT_df |>\n filter(str_detect(lines, \".*仍.*\")) |>\n  summarise(num_sentences = n())\n\ntr_he_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\和.*\")) |>\n  summarise(num_sentences = n())\n\ntr_y_num <- \n  TT_df |>\n filter(str_detect(lines, \".*也.*\")) |>\n  summarise(num_sentences = n())\n\ntr_xb_num <- \n  TT_df |>\n filter(str_detect(lines, \".*相比.*\")) |>\n  summarise(num_sentences = n())\n\ntr_bin_num <- \n  TT_df |>\n filter(str_detect(lines, \".*并.*\")) |>\n  summarise(num_sentences = n())\n\ntransitions_num_CN = tr_d_num + tr_re_num + tr_e_num + tr_sr_num + tr_ds_num + tr_q_num + tr_ce_num + tr_rc_num + tr_yy_num + tr_zy_num + tr_yw_num + tr_sy_num + tr_yc_num + tr_sh_num + tr_rg_num + tr_r_num + tr_h_num + tr_ts_num + tr_yj_num + tr_ren_num + tr_he_num + tr_y_num + tr_xb_num + tr_bin_num\n```\n:::\n\n\n## Counting frame markers\n\nFor English frame markers' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfr_fi_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ff]irst.*\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nfr_th_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Tt]hen\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nfr_fu_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ff]urther\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nfr_re_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Rr]ecently\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nfr_he_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Hh]ere\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nfr_ta_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Tt]aken\\\\s*together\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nframe_num_EN = fr_fi_num + fr_th_num +fr_fu_num + fr_re_num + fr_he_num + fr_ta_num\n```\n:::\n\n\nFor Mandarin frame markers' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfr_sx_num <- \n  TT_df |>\n filter(str_detect(lines, \".*首先.*\")) |>\n  summarise(num_sentences = n())\n\nfr_xs_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\先是.*\")) |>\n  summarise(num_sentences = n())\n\nfr_dc_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\第.次.*\")) |>\n  summarise(num_sentences = n())\n\nfr_zs_num <- \n  TT_df |>\n filter(str_detect(lines, \".*这是.*\")) |>\n  summarise(num_sentences = n())\n\nfr_db_num <- \n  TT_df |>\n filter(str_detect(lines, \".*第.部分.*\")) |>\n  summarise(num_sentences = n())\n\nfr_jb_num <- \n  TT_df |>\n filter(str_detect(lines, \".*进一步.*\")) |>\n  summarise(num_sentences = n())\n\nframe_num_CN = fr_sx_num + fr_xs_num + fr_dc_num + fr_zs_num + fr_db_num + fr_jb_num\n```\n:::\n\n\n## Counting endophoric markers\n\nFor English endophoric markers' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nend_fi_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ff]ig\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nend_vi_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Vv]ideo\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nend_me_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\bMethods\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nend_as_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Aa]s\\\\s*describe.*\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nendophoric_num_EN = end_fi_num + end_vi_num + end_me_num + end_as_num\n```\n:::\n\n\nFor Mandarin endophoric markers' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nend_jt_num <- \n  TT_df |>\n filter(str_detect(lines, \".*见图.*\")) |>\n  summarise(num_sentences = n())\n\nend_ru_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\如图.*\")) |>\n  summarise(num_sentences = n())\n\nend_bc_num <- \n  TT_df |>\n filter(str_detect(lines, \".*补充数据图.*\")) |>\n  summarise(num_sentences = n())\n\nend_flt_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\附录图.*\")) |>\n  summarise(num_sentences = n())\n\nend_js_num <- \n  TT_df |>\n filter(str_detect(lines, \".*技术原理部分.*\")) |>\n  summarise(num_sentences = n())\n\nend_fa_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\方案.*\")) |>\n  summarise(num_sentences = n())\n\nend_sp_num <- \n  TT_df |>\n filter(str_detect(lines, \".*附录视频.*\")) |>\n  summarise(num_sentences = n())\n\nend_ss_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\上述.*\")) |>\n  summarise(num_sentences = n())\n\nend_xq_num <- \n  TT_df |>\n filter(str_detect(lines, \".*先前.*\")) |>\n  summarise(num_sentences = n())\n\nendophoric_num_CN = end_jt_num + end_ru_num + end_bc_num + end_flt_num + end_js_num + end_fa_num + end_sp_num + end_ss_num + end_xq_num\n```\n:::\n\n\n## Counting code glosses\n\nFor English code glosses' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nco_fo_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ff]or\\\\s*instance\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\nco_in_num <- \n  ST_df |>\n filter(str_detect(lines, \".*\\\\b[Ii]ncluding\\\\b.*\")) |>\n  summarise(num_sentences = n())\n\ncode_num_EN = co_fo_num + co_in_num\n```\n:::\n\n\nFor Mandarin code glosses' number\n\n\n::: {.cell}\n\n```{.r .cell-code}\nco_j_num <- \n  TT_df |>\n filter(str_detect(lines, \".*即.*\")) |>\n  summarise(num_sentences = n())\n\nco_g_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\该.*\")) |>\n  summarise(num_sentences = n())\n\nco_qz_num <- \n  TT_df |>\n filter(str_detect(lines, \".*其中.*\")) |>\n  summarise(num_sentences = n())\n\nco_bk_num <- \n  TT_df |>\n filter(str_detect(lines, \".*\\\\包括.*\")) |>\n  summarise(num_sentences = n())\n\ncode_num_CN = co_j_num + co_g_num + co_qz_num + co_bk_num\n```\n:::\n\n\n## Metadiscourse marker tibble\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmeta_tbl <- tibble(\n  Category = c(\"hedges\", \"boosters\",  \"attitude markers\", \"engagement markers\", \"self-mentions\", \"transitions\", \"frame markers\", \"endophoric markers\", \"code glosses\"),\n  Num_EN = c(as.numeric(hedges_num_EN), as.numeric(boosters_num_EN),  as.numeric(attitude_num_EN), as.numeric(engagement_num_EN), as.numeric(self_num_EN), as.numeric(transitions_num_EN), as.numeric(frame_num_EN), as.numeric(endophoric_num_EN), as.numeric(code_num_EN)),\n  Num_CN = c(as.numeric(hedges_num_CN), as.numeric(boosters_num_CN), as.numeric(attitude_num_CN), as.numeric(engagement_num_CN), as.numeric(self_num_CN), as.numeric(transitions_num_CN), as.numeric(frame_num_CN), as.numeric(endophoric_num_CN), as.numeric(code_num_CN))\n) \n```\n:::\n\n\n# Documentation\n\n## Data dictionary\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the dataset\nif(!file.exists(\"data/derived/meta_num.csv\")){\n  write_csv(meta_tbl, \"data/derived/meta_num.csv\")}\n\n# Create the data dictionary\nif(!file.exists(\"data/derived/meta_num_dd.csv\")){\n  create_data_dictionary(\n  meta_tbl,\n  \"data/derived/meta_num_dd.csv\"\n)}\n```\n:::\n\n\n## Project structure\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# List the contents of the data directory\ndir_tree(recurse = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n.\n├── DESCRIPTION\n├── LIN-380-project.Rproj\n├── README.md\n├── _freeze\n│   └── process\n│       ├── 1_acquire\n│       └── 2_curate\n├── _quarto.yml\n├── _site\n│   ├── index.html\n│   ├── robots.txt\n│   ├── search.json\n│   ├── site_libs\n│   │   ├── bootstrap\n│   │   ├── clipboard\n│   │   ├── quarto-html\n│   │   ├── quarto-nav\n│   │   └── quarto-search\n│   └── sitemap.xml\n├── bibliography.bib\n├── data\n│   ├── analysis\n│   ├── derived\n│   │   ├── CAR_ST_curated.csv\n│   │   ├── CAR_ST_curated_dd.csv\n│   │   ├── CAR_TT_curated.csv\n│   │   ├── CAR_TT_curated_dd.csv\n│   │   ├── meta_num.csv\n│   │   └── meta_num_dd.csv\n│   └── original\n│       ├── CAR_ST.csv\n│       ├── CAR_ST.txt\n│       ├── CAR_TT.csv\n│       ├── CAR_TT.txt\n│       └── data_origin.csv\n├── index.qmd\n├── process\n│   ├── 1_acquire.html\n│   ├── 1_acquire.qmd\n│   ├── 2_curate.html\n│   ├── 2_curate.qmd\n│   ├── 3_transform.qmd\n│   ├── 3_transform.rmarkdown\n│   └── 4_analyze.qmd\n├── reports\n│   ├── article.qmd\n│   ├── presentations.qmd\n│   ├── prospectus.qmd\n│   └── slides\n│       └── workshop\n└── site_libs\n    ├── bootstrap\n    │   ├── bootstrap-icons.css\n    │   ├── bootstrap-icons.woff\n    │   ├── bootstrap.min.css\n    │   └── bootstrap.min.js\n    ├── clipboard\n    │   └── clipboard.min.js\n    ├── quarto-html\n    │   ├── anchor.min.js\n    │   ├── popper.min.js\n    │   ├── quarto-syntax-highlighting.css\n    │   ├── quarto.js\n    │   ├── tippy.css\n    │   └── tippy.umd.min.js\n    ├── quarto-nav\n    │   ├── headroom.min.js\n    │   └── quarto-nav.js\n    └── quarto-search\n        ├── autocomplete.umd.js\n        ├── fuse.min.js\n        └── quarto-search.js\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}